package com.leetcode.L301_400.L0390;

/**
 * 390. 消除游戏
 * 列表 arr 由在范围 [1, n] 中的所有整数组成，并按严格递增排序。请你对 arr 应用下述算法：
 * (1)从左到右，删除第一个数字，然后每隔一个数字删除一个，直到到达列表末尾。
 * (2)重复上面的步骤，但这次是从右到左。也就是，删除最右侧的数字，然后剩下的数字每隔一个删除一个。
 * (3)不断重复这两步，从左到右和从右到左交替进行，直到只剩下一个数字。
 * (4)给你整数 n ，返回 arr 最后剩下的数字。
 *
 * 示例 1：
 * 输入：n = 9
 * 输出：6
 * 解释：
 * arr = [1, 2, 3, 4, 5, 6, 7, 8, 9]
 * arr = [2, 4, 6, 8]
 * arr = [2, 6]
 * arr = [6]
 *
 * 示例 2：
 * 输入：n = 1
 * 输出：1
 *
 * 提示：
 * 1 <= n <= 109
 */
public class EliminationGame {
    /**
     * 方法：数学
     * @param n
     * @return
     */
    public int lastRemaining(int n) {
        //序列头
        int head = 1;
        //步长
        int step = 1;
        //从左往右
        boolean left = true;
        //遍历
        while (n > 1){
            //从左往右，序列头一定变化
            //从右往左，只有奇数个，序列头才变化
            if (left || n %2 != 0){
                head = head + step;
            }
            //每次遍历都会步长增加一倍
            step *= 2;
            //每一次遍历都会少一半的数
            n /= 2;
            //转换遍历方向
            left = !left;
        }
        return head;
    }
}
