package com.leetcode.L2201_2300.L2264;

/**
 * 2264. 字符串中最大的 3 位相同数字
 * 给你一个字符串 num ，表示一个大整数。如果一个整数满足下述所有条件，则认为该整数是一个 优质整数 ：
 * 该整数是 num 的一个长度为 3 的 子字符串 。
 * 该整数由唯一一个数字重复 3 次组成。
 * 以字符串形式返回 最大的优质整数 。如果不存在满足要求的整数，则返回一个空字符串 "" 。
 * 注意：
 * 子字符串 是字符串中的一个连续字符序列。
 * num 或优质整数中可能存在 前导零 。
 *
 * 示例 1：
 * 输入：num = "6777133339"
 * 输出："777"
 * 解释：num 中存在两个优质整数："777" 和 "333" 。
 * "777" 是最大的那个，所以返回 "777" 。
 *
 * 示例 2：
 * 输入：num = "2300019"
 * 输出："000"
 * 解释："000" 是唯一一个优质整数。
 *
 * 示例 3：
 * 输入：num = "42352338"
 * 输出：""
 * 解释：不存在长度为 3 且仅由一个唯一数字组成的整数。因此，不存在优质整数。
 *
 * 提示：
 * 3 <= num.length <= 1000
 * num 仅由数字（0 - 9）组成
 */
public class LargestThreeSameDigitsFinder {
    /**
     * 方法：滑动窗口
     */
    public String largestGoodInteger(String num) {
        int i = 0;
        int j = 1;
        int res = -1;
        while (j < num.length()){
            // 窗口内字符相等
            if (num.charAt(i) - '0' == num.charAt(j) - '0'){
                // 窗口长度为3
                if (j - i == 2){
                    // 取最大值
                    res = Math.max(res, num.charAt(i) - '0');
                    // 滑动窗口
                    i = j + 1;
                    j = j + 2;
                } else {
                    // 扩大窗口
                    j++;
                }
            } else {
                // 滑动窗口
                i = j;
                j++;
            }
        }
        // 不符合条件
        if (res == -1){
            return "";
        }

        return "" + res + res + res;
    }
}
