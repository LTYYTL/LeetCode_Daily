package com.leetcode.L201_300.L0231;

/**
 * 231. 2 的幂
 * 给你一个整数 n，请你判断该整数是否是 2 的幂次方。如果是，返回 true ；否则，返回 false 。
 * 如果存在一个整数 x 使得 n == 2x ，则认为 n 是 2 的幂次方。
 *
 * 示例 1：
 * 输入：n = 1
 * 输出：true
 * 解释：20 = 1
 *
 * 示例 2：
 * 输入：n = 16
 * 输出：true
 * 解释：24 = 16
 *
 * 示例 3：
 * 输入：n = 3
 * 输出：false
 *
 * 示例 4：
 * 输入：n = 4
 * 输出：true
 *
 * 示例 5：
 * 输入：n = 5
 * 输出：false
 *
 * 提示：
 * -231 <= n <= 231 - 1
 */
public class PowerTwo {
    /**
     * 方法：数学
     * 若 n = 2^x，且 x 为自然数（即 n 为 2 的幂），则一定满足以下条件：
     *  恒有 n & (n - 1) == 0，这是因为：
     *  n 二进制最高位为 1，其余所有位为 0；
     *  n - 1 二进制最高位为 0，其余所有位为 1；
     * 一定满足 n > 0。
     * 因此，通过 n > 0 且 n & (n - 1) == 0 即可判定是否满足 n = 2^x
     * @param n
     * @return
     */
    public boolean isPowerOfTwo(int n) {
        return n > 0 && (n & (n - 1)) == 0;
    }
}
